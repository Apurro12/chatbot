version: "3.3"

services:

  inference:
    build:
      context: .
      dockerfile: ./inference/DockerfileCreateEndpoint
      args:
        - OPENAI_API_KEY=${OPENAI_API_KEY}
        - POSTGRES_DATABASE=${POSTGRES_DATABASE}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        - EMBEDING_COLLECTION_NAME=${EMBEDING_COLLECTION_NAME}
        - LANGCHAIN_PROJECT=${LANGCHAIN_PROJECT}
        - LANGCHAIN_API_KEY=${LANGCHAIN_API_KEY}
        - LANGCHAIN_ENDPOINT=${LANGCHAIN_ENDPOINT}
        - LANGCHAIN_TRACING_V2=${LANGCHAIN_TRACING_V2}

    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - POSTGRES_DATABASE=${POSTGRES_DATABASE}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - EMBEDING_COLLECTION_NAME=${EMBEDING_COLLECTION_NAME}
      - LANGCHAIN_PROJECT=${LANGCHAIN_PROJECT}
      - LANGCHAIN_API_KEY=${LANGCHAIN_API_KEY}
      - LANGCHAIN_ENDPOINT=${LANGCHAIN_ENDPOINT}
      - LANGCHAIN_TRACING_V2=${LANGCHAIN_TRACING_V2}
    depends_on:
      postgresql:
        condition: service_healthy
    ports:
      - "8000:8000" 

  postgresql:
    build:
      context: .
      dockerfile: ./postgres/DockerfilePostgresql
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5433:5432" 
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DATABASE}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s