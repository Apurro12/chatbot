name: Build and Test Docker Image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code from the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Docker environment
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 4: Build the Docker image
      # Is not necesarly to load the env here to run the tests
      - name: Build Docker image
        run: |
          docker build --build-arg OPENAI_API_KEY=$OPENAI_API_KEY --build-arg LANGCHAIN_TRACING_V2=$LANGCHAIN_TRACING_V2  --build-arg LANGCHAIN_ENDPOINT=$LANGCHAIN_ENDPOINT --build-arg LANGCHAIN_API_KEY=$LANGCHAIN_API_KEY --build-arg LANGCHAIN_PROJECT=$LANGCHAIN_PROJECT -t inference:latest -f inference/DockerfileCreateEndpoint .

      # Step 5: Run tests inside the Docker container
      - name: Run tests in Docker container
        run: |
          docker run -e OPENAI_API_KEY=$OPENAI_API_KEY -e LANGCHAIN_TRACING_V2=$LANGCHAIN_TRACING_V2  -e LANGCHAIN_ENDPOINT=$LANGCHAIN_ENDPOINT -e LANGCHAIN_API_KEY=$LANGCHAIN_API_KEY -e LANGCHAIN_PROJECT=$LANGCHAIN_PROJECT --rm inference:latest pytest -s
        env:
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          COMPOSE_PROJECT_NAME: ${{ secrets.COMPOSE_PROJECT_NAME }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_DATABASE: ${{ secrets.POSTGRES_DATABASE }}
          EMBEDING_COLLECTION_NAME: ${{ secrets.EMBEDING_COLLECTION_NAME }}
          LANGCHAIN_PROJECT: ${{ secrets.LANGCHAIN_PROJECT }}
          LANGCHAIN_API_KEY: ${{ secrets.LANGCHAIN_API_KEY }}
          LANGCHAIN_ENDPOINT: ${{ secrets.LANGCHAIN_ENDPOINT }}
          LANGCHAIN_TRACING_V2: ${{ secrets.LANGCHAIN_TRACING_V2 }}